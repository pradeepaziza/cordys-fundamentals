/*
  This class has been generated by the Code Generator
*/

package com.orderdb;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.classinfo.AttributeInfo;
import com.cordys.cpc.bsf.classinfo.ClassInfo;
import com.cordys.cpc.bsf.classinfo.RelationInfo_FK;
import com.cordys.cpc.bsf.listeners.constraint.NumberValidator;
import com.cordys.cpc.bsf.listeners.constraint.StringValidator;


public abstract class OrdersBase extends com.cordys.cpc.bsf.busobject.StateBusObject
{
    // tags used in the XML document
    public final static String ATTR_OrderID = "OrderID";
    public final static String ATTR_CustomerID = "CustomerID";
    public final static String ATTR_EmployeeID = "EmployeeID";
    public final static String ATTR_OrderDate = "OrderDate";
    public final static String ATTR_RequiredDate = "RequiredDate";
    public final static String ATTR_ShippedDate = "ShippedDate";
    public final static String ATTR_ShipVia = "ShipVia";
    public final static String ATTR_Freight = "Freight";
    public final static String ATTR_ShipName = "ShipName";
    public final static String ATTR_ShipAddress = "ShipAddress";
    public final static String ATTR_ShipCity = "ShipCity";
    public final static String ATTR_ShipRegion = "ShipRegion";
    public final static String ATTR_ShipPostalCode = "ShipPostalCode";
    public final static String ATTR_ShipCountry = "ShipCountry";
    private final static String REL_Order_x0020_DetailsObjects = "FK:Orders[OrderID]:Order_x0020_Details[OrderID]";
    private final static String REL_CustomerIDObject = "FK:Orders[CustomerID]:Customers[CustomerID]";
    private final static String REL_EmployeeIDObject = "FK:Orders[EmployeeID]:Employees[EmployeeID]";
    private final static String REL_ShipViaObject = "FK:Orders[ShipVia]:Shippers[ShipperID]";
    private static ClassInfo s_classInfo = null;
    public static ClassInfo _getClassInfo()//NOPMD framework ensures this is thread safe
    {
        if ( s_classInfo == null )//NOPMD
        {
            s_classInfo = newClassInfo(Orders.class);
            s_classInfo.setTableName("Orders");
            s_classInfo.setUIDElements(new String[]{ATTR_OrderID});
            {
                AttributeInfo ai = new AttributeInfo(ATTR_OrderID);
                ai.setJavaName("OrderID");
                ai.setColumnName("OrderID");
                ai.setAttributeClass(int.class);
                NumberValidator v = new NumberValidator(ATTR_OrderID);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_CustomerID);
                ai.setJavaName("CustomerID");
                ai.setColumnName("CustomerID");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_CustomerID);
                v.setMaxLength(5);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_EmployeeID);
                ai.setJavaName("EmployeeID");
                ai.setColumnName("EmployeeID");
                ai.setAttributeClass(int.class);
                NumberValidator v = new NumberValidator(ATTR_EmployeeID);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_OrderDate);
                ai.setJavaName("OrderDate");
                ai.setColumnName("OrderDate");
                ai.setAttributeClass(java.util.Date.class);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_RequiredDate);
                ai.setJavaName("RequiredDate");
                ai.setColumnName("RequiredDate");
                ai.setAttributeClass(java.util.Date.class);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_ShippedDate);
                ai.setJavaName("ShippedDate");
                ai.setColumnName("ShippedDate");
                ai.setAttributeClass(java.util.Date.class);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_ShipVia);
                ai.setJavaName("ShipVia");
                ai.setColumnName("ShipVia");
                ai.setAttributeClass(int.class);
                NumberValidator v = new NumberValidator(ATTR_ShipVia);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_Freight);
                ai.setJavaName("Freight");
                ai.setColumnName("Freight");
                ai.setAttributeClass(double.class);
                NumberValidator v = new NumberValidator(ATTR_Freight);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_ShipName);
                ai.setJavaName("ShipName");
                ai.setColumnName("ShipName");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_ShipName);
                v.setMaxLength(40);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_ShipAddress);
                ai.setJavaName("ShipAddress");
                ai.setColumnName("ShipAddress");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_ShipAddress);
                v.setMaxLength(60);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_ShipCity);
                ai.setJavaName("ShipCity");
                ai.setColumnName("ShipCity");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_ShipCity);
                v.setMaxLength(15);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_ShipRegion);
                ai.setJavaName("ShipRegion");
                ai.setColumnName("ShipRegion");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_ShipRegion);
                v.setMaxLength(15);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_ShipPostalCode);
                ai.setJavaName("ShipPostalCode");
                ai.setColumnName("ShipPostalCode");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_ShipPostalCode);
                v.setMaxLength(10);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_ShipCountry);
                ai.setJavaName("ShipCountry");
                ai.setColumnName("ShipCountry");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_ShipCountry);
                v.setMaxLength(15);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                // relation Order_x0020_DetailsObjects (FK:Orders[OrderID]:Order_x0020_Details[OrderID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_Order_x0020_DetailsObjects);
                ri.setName("Order_x0020_DetailsObjects");
                ri.setLocalAttributes(new String[]{"OrderID"});
                ri.setLocalIsPK(true);
                ri.setRelatedClass(com.orderdb.Order_x0020_Details.class);
                ri.setRelatedAttributes(new String[]{"OrderID"});
                ri.setRelatedIdentifier("FK:Order_x0020_Details[OrderID]:Orders[OrderID]");
                ri.setLoadMethod("loadOrder_x0020_DetailsObjects");
                s_classInfo.addRelationInfo(ri);
            }
            {
                // relation CustomerIDObject (FK:Orders[CustomerID]:Customers[CustomerID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_CustomerIDObject);
                ri.setName("CustomerIDObject");
                ri.setLocalAttributes(new String[]{"CustomerID"});
                ri.setLocalIsPK(false);
                ri.setRelatedClass(com.orderdb.Customers.class);
                ri.setRelatedAttributes(new String[]{"CustomerID"});
                ri.setRelatedIdentifier("FK:Customers[CustomerID]:Orders[CustomerID]");
                ri.setLoadMethod("loadCustomerIDObject");
                s_classInfo.addRelationInfo(ri);
            }
            {
                // relation EmployeeIDObject (FK:Orders[EmployeeID]:Employees[EmployeeID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_EmployeeIDObject);
                ri.setName("EmployeeIDObject");
                ri.setLocalAttributes(new String[]{"EmployeeID"});
                ri.setLocalIsPK(false);
                ri.setRelatedClass(com.orderdb.Employees.class);
                ri.setRelatedAttributes(new String[]{"EmployeeID"});
                ri.setRelatedIdentifier("FK:Employees[EmployeeID]:Orders[EmployeeID]");
                ri.setLoadMethod("loadEmployeeIDObject");
                s_classInfo.addRelationInfo(ri);
            }
            {
                // relation ShipViaObject (FK:Orders[ShipVia]:Shippers[ShipperID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_ShipViaObject);
                ri.setName("ShipViaObject");
                ri.setLocalAttributes(new String[]{"ShipVia"});
                ri.setLocalIsPK(false);
                ri.setRelatedClass(com.orderdb.Shippers.class);
                ri.setRelatedAttributes(new String[]{"ShipperID"});
                ri.setRelatedIdentifier("FK:Shippers[ShipperID]:Orders[ShipVia]");
                ri.setLoadMethod("loadShipViaObject");
                s_classInfo.addRelationInfo(ri);
            }
        }
        return s_classInfo;
    }

    public OrdersBase(BusObjectConfig config)
    {
        super(config);
    }

    public int getOrderID()
    {
        return getIntProperty(ATTR_OrderID);
    }

    public void setOrderID(int value)
    {
        setProperty(ATTR_OrderID, value, 0);
    }

    public String getCustomerID()
    {
        return getStringProperty(ATTR_CustomerID);
    }

    public void setCustomerID(String value)
    {
        String[] relations = new String[]{REL_CustomerIDObject};
        this.updateSingleRelations(relations, false);
        setProperty(ATTR_CustomerID, value, 0);
        this.updateSingleRelations(relations, true);
    }

    public int getEmployeeID()
    {
        return getIntProperty(ATTR_EmployeeID);
    }

    public void setEmployeeID(int value)
    {
        String[] relations = new String[]{REL_EmployeeIDObject};
        this.updateSingleRelations(relations, false);
        setProperty(ATTR_EmployeeID, value, 0);
        this.updateSingleRelations(relations, true);
    }

    public java.util.Date getOrderDate()
    {
        return getDateTimestampProperty(ATTR_OrderDate);
    }

    public void setOrderDate(java.util.Date value)
    {
        setProperty(ATTR_OrderDate, value, 0);
    }

    public java.util.Date getRequiredDate()
    {
        return getDateTimestampProperty(ATTR_RequiredDate);
    }

    public void setRequiredDate(java.util.Date value)
    {
        setProperty(ATTR_RequiredDate, value, 0);
    }

    public java.util.Date getShippedDate()
    {
        return getDateTimestampProperty(ATTR_ShippedDate);
    }

    public void setShippedDate(java.util.Date value)
    {
        setProperty(ATTR_ShippedDate, value, 0);
    }

    public int getShipVia()
    {
        return getIntProperty(ATTR_ShipVia);
    }

    public void setShipVia(int value)
    {
        String[] relations = new String[]{REL_ShipViaObject};
        this.updateSingleRelations(relations, false);
        setProperty(ATTR_ShipVia, value, 0);
        this.updateSingleRelations(relations, true);
    }

    public double getFreight()
    {
        return getDoubleProperty(ATTR_Freight);
    }

    public void setFreight(double value)
    {
        setProperty(ATTR_Freight, value, 0);
    }

    public String getShipName()
    {
        return getStringProperty(ATTR_ShipName);
    }

    public void setShipName(String value)
    {
        setProperty(ATTR_ShipName, value, 0);
    }

    public String getShipAddress()
    {
        return getStringProperty(ATTR_ShipAddress);
    }

    public void setShipAddress(String value)
    {
        setProperty(ATTR_ShipAddress, value, 0);
    }

    public String getShipCity()
    {
        return getStringProperty(ATTR_ShipCity);
    }

    public void setShipCity(String value)
    {
        setProperty(ATTR_ShipCity, value, 0);
    }

    public String getShipRegion()
    {
        return getStringProperty(ATTR_ShipRegion);
    }

    public void setShipRegion(String value)
    {
        setProperty(ATTR_ShipRegion, value, 0);
    }

    public String getShipPostalCode()
    {
        return getStringProperty(ATTR_ShipPostalCode);
    }

    public void setShipPostalCode(String value)
    {
        setProperty(ATTR_ShipPostalCode, value, 0);
    }

    public String getShipCountry()
    {
        return getStringProperty(ATTR_ShipCountry);
    }

    public void setShipCountry(String value)
    {
        setProperty(ATTR_ShipCountry, value, 0);
    }

    public BusObjectIterator<Order_x0020_Details> getOrder_x0020_DetailsObjects()
    {
        return getMultiRelationObjects(REL_Order_x0020_DetailsObjects);
    }
    public BusObjectIterator<Order_x0020_Details> loadOrder_x0020_DetailsObjects()
    {
        String queryText = "select * from \"Order Details\" where \"OrderID\" = :OrderID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("OrderID", "Order Details.OrderID", QueryObject.PARAM_INT, new Integer(getOrderID()));
        query.setResultClass(Order_x0020_Details.class);
        return query.getObjects();
    }


    public void addOrder_x0020_DetailsObject(Order_x0020_Details a_Order_x0020_Details)
    {
        a_Order_x0020_Details.setOrderID(this.getOrderID());
    }

    public void removeOrder_x0020_DetailsObject(Order_x0020_Details a_Order_x0020_Details)
    {
        a_Order_x0020_Details.setNull("OrderID");
    }

    public Customers getCustomerIDObject()
    {
        return (Customers)getSingleRelationObject(REL_CustomerIDObject);
    }
    public Customers loadCustomerIDObject()
    {
        String queryText = "select * from \"Customers\" where \"CustomerID\" = :CustomerID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CustomerID", "Customers.CustomerID", QueryObject.PARAM_STRING, getCustomerID());
        query.setResultClass(Customers.class);
        return (Customers)query.getObject();
    }


    public void setCustomerIDObject(Customers a_Customers)
    {
        if (a_Customers == null)
        {
            this.setNull("CustomerID");
        }
        else
        {
            this.setCustomerID(a_Customers.getCustomerID());
        }
    }

    public Employees getEmployeeIDObject()
    {
        return (Employees)getSingleRelationObject(REL_EmployeeIDObject);
    }
    public Employees loadEmployeeIDObject()
    {
        String queryText = "select * from \"Employees\" where \"EmployeeID\" = :EmployeeID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("EmployeeID", "Employees.EmployeeID", QueryObject.PARAM_INT, new Integer(getEmployeeID()));
        query.setResultClass(Employees.class);
        return (Employees)query.getObject();
    }


    public void setEmployeeIDObject(Employees a_Employees)
    {
        if (a_Employees == null)
        {
            this.setNull("EmployeeID");
        }
        else
        {
            this.setEmployeeID(a_Employees.getEmployeeID());
        }
    }

    public Shippers getShipViaObject()
    {
        return (Shippers)getSingleRelationObject(REL_ShipViaObject);
    }
    public Shippers loadShipViaObject()
    {
        String queryText = "select * from \"Shippers\" where \"ShipperID\" = :ShipVia";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("ShipVia", "Shippers.ShipperID", QueryObject.PARAM_INT, new Integer(getShipVia()));
        query.setResultClass(Shippers.class);
        return (Shippers)query.getObject();
    }


    public void setShipViaObject(Shippers a_Shippers)
    {
        if (a_Shippers == null)
        {
            this.setNull("ShipVia");
        }
        else
        {
            this.setShipVia(a_Shippers.getShipperID());
        }
    }

    public void setNull(String element)
    {
        super.setNull(element);
        if (ATTR_CustomerID.equals(element))
        {
            this.updateSingleRelation(REL_CustomerIDObject, false);
        }
        else if (ATTR_EmployeeID.equals(element))
        {
            this.updateSingleRelation(REL_EmployeeIDObject, false);
        }
        else if (ATTR_ShipVia.equals(element))
        {
            this.updateSingleRelation(REL_ShipViaObject, false);
        }
    }
    public static BusObjectIterator<com.orderdb.Orders> getNextOrdersObjects(int OrderID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"Orders\" where (\"OrderID\" > :OrderID) order by \"OrderID\" asc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("OrderID", "Orders.OrderID", QueryObject.PARAM_INT, new Integer(OrderID));
        query.setResultClass(Orders.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    public static com.orderdb.Orders getOrdersObject(int OrderID)
    {
        String queryText = "select * from \"Orders\" where \"OrderID\" = :OrderID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("OrderID", "Orders.OrderID", QueryObject.PARAM_INT, new Integer(OrderID));
        query.setResultClass(Orders.class);
        return (Orders)query.getObject();
    }

    public static BusObjectIterator<com.orderdb.Orders> getOrdersObjects(int fromOrderID, int toOrderID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"Orders\" where \"OrderID\" between :fromOrderID and :toOrderID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromOrderID", "Orders.OrderID", QueryObject.PARAM_INT, new Integer(fromOrderID));
        query.addParameter("toOrderID", "Orders.OrderID", QueryObject.PARAM_INT, new Integer(toOrderID));
        query.setResultClass(Orders.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.Orders> getOrdersObjects(int fromOrderID, int toOrderID)
    {
        String queryText = "select * from \"Orders\" where \"OrderID\" between :fromOrderID and :toOrderID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromOrderID", "Orders.OrderID", QueryObject.PARAM_INT, new Integer(fromOrderID));
        query.addParameter("toOrderID", "Orders.OrderID", QueryObject.PARAM_INT, new Integer(toOrderID));
        query.setResultClass(Orders.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.Orders> getOrdersObjectsForCustomerID(String CustomerID)
    {
        String queryText = "select * from \"Orders\" where \"CustomerID\" = :CustomerID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CustomerID", "Orders.CustomerID", QueryObject.PARAM_STRING, CustomerID);
        query.setResultClass(Orders.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.Orders> getOrdersObjectsForEmployeeID(int EmployeeID)
    {
        String queryText = "select * from \"Orders\" where \"EmployeeID\" = :EmployeeID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("EmployeeID", "Orders.EmployeeID", QueryObject.PARAM_INT, new Integer(EmployeeID));
        query.setResultClass(Orders.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.Orders> getOrdersObjectsForShipVia(int ShipVia)
    {
        String queryText = "select * from \"Orders\" where \"ShipVia\" = :ShipVia";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("ShipVia", "Orders.ShipVia", QueryObject.PARAM_INT, new Integer(ShipVia));
        query.setResultClass(Orders.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.Orders> getPreviousOrdersObjects(int OrderID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"Orders\" where (\"OrderID\" < :OrderID) order by \"OrderID\" desc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("OrderID", "Orders.OrderID", QueryObject.PARAM_INT, new Integer(OrderID));
        query.setResultClass(Orders.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

}
