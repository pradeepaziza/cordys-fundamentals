/*
  This class has been generated by the Code Generator
*/

package com.orderdb;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.classinfo.AttributeInfo;
import com.cordys.cpc.bsf.classinfo.ClassInfo;
import com.cordys.cpc.bsf.classinfo.RelationInfo_FK;
import com.cordys.cpc.bsf.listeners.constraint.NumberValidator;
import com.cordys.cpc.bsf.listeners.constraint.StringValidator;


public abstract class CategoriesBase extends com.cordys.cpc.bsf.busobject.StateBusObject
{
    // tags used in the XML document
    public final static String ATTR_CategoryID = "CategoryID";
    public final static String ATTR_CategoryName = "CategoryName";
    public final static String ATTR_Description = "Description";
    public final static String ATTR_Picture = "Picture";
    private final static String REL_ProductsObjects = "FK:Categories[CategoryID]:Products[CategoryID]";
    private static ClassInfo s_classInfo = null;
    public static ClassInfo _getClassInfo()//NOPMD framework ensures this is thread safe
    {
        if ( s_classInfo == null )//NOPMD
        {
            s_classInfo = newClassInfo(Categories.class);
            s_classInfo.setTableName("Categories");
            s_classInfo.setUIDElements(new String[]{ATTR_CategoryID});
            {
                AttributeInfo ai = new AttributeInfo(ATTR_CategoryID);
                ai.setJavaName("CategoryID");
                ai.setColumnName("CategoryID");
                ai.setAttributeClass(int.class);
                NumberValidator v = new NumberValidator(ATTR_CategoryID);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_CategoryName);
                ai.setJavaName("CategoryName");
                ai.setColumnName("CategoryName");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_CategoryName);
                v.setMaxLength(15);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_Description);
                ai.setJavaName("Description");
                ai.setColumnName("Description");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_Description);
                v.setMaxLength(2147483647);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_Picture);
                ai.setJavaName("Picture");
                ai.setColumnName("Picture");
                ai.setAttributeClass(String.class);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                // relation ProductsObjects (FK:Categories[CategoryID]:Products[CategoryID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_ProductsObjects);
                ri.setName("ProductsObjects");
                ri.setLocalAttributes(new String[]{"CategoryID"});
                ri.setLocalIsPK(true);
                ri.setRelatedClass(com.orderdb.Products.class);
                ri.setRelatedAttributes(new String[]{"CategoryID"});
                ri.setRelatedIdentifier("FK:Products[CategoryID]:Categories[CategoryID]");
                ri.setLoadMethod("loadProductsObjects");
                s_classInfo.addRelationInfo(ri);
            }
        }
        return s_classInfo;
    }

    public CategoriesBase(BusObjectConfig config)
    {
        super(config);
    }

    public int getCategoryID()
    {
        return getIntProperty(ATTR_CategoryID);
    }

    public void setCategoryID(int value)
    {
        setProperty(ATTR_CategoryID, value, 0);
    }

    public String getCategoryName()
    {
        return getStringProperty(ATTR_CategoryName);
    }

    public void setCategoryName(String value)
    {
        setProperty(ATTR_CategoryName, value, 0);
    }

    public String getDescription()
    {
        return getStringProperty(ATTR_Description);
    }

    public void setDescription(String value)
    {
        setProperty(ATTR_Description, value, 0);
    }

    public String getPicture()
    {
        return getStringProperty(ATTR_Picture);
    }

    public void setPicture(String value)
    {
        setProperty(ATTR_Picture, value, 0);
    }

    public BusObjectIterator<Products> getProductsObjects()
    {
        return getMultiRelationObjects(REL_ProductsObjects);
    }
    public BusObjectIterator<Products> loadProductsObjects()
    {
        String queryText = "select * from \"Products\" where \"CategoryID\" = :CategoryID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CategoryID", "Products.CategoryID", QueryObject.PARAM_INT, new Integer(getCategoryID()));
        query.setResultClass(Products.class);
        return query.getObjects();
    }


    public void addProductsObject(Products a_Products)
    {
        a_Products.setCategoryID(this.getCategoryID());
    }

    public void removeProductsObject(Products a_Products)
    {
        a_Products.setNull("CategoryID");
    }

    public static com.orderdb.Categories getCategoriesObject(int CategoryID)
    {
        String queryText = "select * from \"Categories\" where \"CategoryID\" = :CategoryID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CategoryID", "Categories.CategoryID", QueryObject.PARAM_INT, new Integer(CategoryID));
        query.setResultClass(Categories.class);
        return (Categories)query.getObject();
    }

    public static BusObjectIterator<com.orderdb.Categories> getCategoriesObjects(int fromCategoryID, int toCategoryID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"Categories\" where \"CategoryID\" between :fromCategoryID and :toCategoryID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromCategoryID", "Categories.CategoryID", QueryObject.PARAM_INT, new Integer(fromCategoryID));
        query.addParameter("toCategoryID", "Categories.CategoryID", QueryObject.PARAM_INT, new Integer(toCategoryID));
        query.setResultClass(Categories.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.Categories> getCategoriesObjects(int fromCategoryID, int toCategoryID)
    {
        String queryText = "select * from \"Categories\" where \"CategoryID\" between :fromCategoryID and :toCategoryID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromCategoryID", "Categories.CategoryID", QueryObject.PARAM_INT, new Integer(fromCategoryID));
        query.addParameter("toCategoryID", "Categories.CategoryID", QueryObject.PARAM_INT, new Integer(toCategoryID));
        query.setResultClass(Categories.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.Categories> getNextCategoriesObjects(int CategoryID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"Categories\" where (\"CategoryID\" > :CategoryID) order by \"CategoryID\" asc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CategoryID", "Categories.CategoryID", QueryObject.PARAM_INT, new Integer(CategoryID));
        query.setResultClass(Categories.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.Categories> getPreviousCategoriesObjects(int CategoryID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"Categories\" where (\"CategoryID\" < :CategoryID) order by \"CategoryID\" desc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CategoryID", "Categories.CategoryID", QueryObject.PARAM_INT, new Integer(CategoryID));
        query.setResultClass(Categories.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

}
