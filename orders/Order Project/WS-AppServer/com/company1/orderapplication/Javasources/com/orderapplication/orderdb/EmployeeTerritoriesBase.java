/*
  This class has been generated by the Code Generator
*/

package com.orderdb;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.classinfo.AttributeInfo;
import com.cordys.cpc.bsf.classinfo.ClassInfo;
import com.cordys.cpc.bsf.classinfo.RelationInfo_FK;
import com.cordys.cpc.bsf.listeners.constraint.NumberValidator;
import com.cordys.cpc.bsf.listeners.constraint.StringValidator;


public abstract class EmployeeTerritoriesBase extends com.cordys.cpc.bsf.busobject.StateBusObject
{
    // tags used in the XML document
    public final static String ATTR_EmployeeID = "EmployeeID";
    public final static String ATTR_TerritoryID = "TerritoryID";
    private final static String REL_EmployeeIDObject = "FK:EmployeeTerritories[EmployeeID]:Employees[EmployeeID]";
    private final static String REL_TerritoryIDObject = "FK:EmployeeTerritories[TerritoryID]:Territories[TerritoryID]";
    private static ClassInfo s_classInfo = null;
    public static ClassInfo _getClassInfo()//NOPMD framework ensures this is thread safe
    {
        if ( s_classInfo == null )//NOPMD
        {
            s_classInfo = newClassInfo(EmployeeTerritories.class);
            s_classInfo.setTableName("EmployeeTerritories");
            s_classInfo.setUIDElements(new String[]{ATTR_EmployeeID, ATTR_TerritoryID});
            {
                AttributeInfo ai = new AttributeInfo(ATTR_EmployeeID);
                ai.setJavaName("EmployeeID");
                ai.setColumnName("EmployeeID");
                ai.setAttributeClass(int.class);
                NumberValidator v = new NumberValidator(ATTR_EmployeeID);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_TerritoryID);
                ai.setJavaName("TerritoryID");
                ai.setColumnName("TerritoryID");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_TerritoryID);
                v.setMaxLength(20);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                // relation EmployeeIDObject (FK:EmployeeTerritories[EmployeeID]:Employees[EmployeeID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_EmployeeIDObject);
                ri.setName("EmployeeIDObject");
                ri.setLocalAttributes(new String[]{"EmployeeID"});
                ri.setLocalIsPK(false);
                ri.setRelatedClass(com.orderdb.Employees.class);
                ri.setRelatedAttributes(new String[]{"EmployeeID"});
                ri.setRelatedIdentifier("FK:Employees[EmployeeID]:EmployeeTerritories[EmployeeID]");
                ri.setLoadMethod("loadEmployeeIDObject");
                s_classInfo.addRelationInfo(ri);
            }
            {
                // relation TerritoryIDObject (FK:EmployeeTerritories[TerritoryID]:Territories[TerritoryID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_TerritoryIDObject);
                ri.setName("TerritoryIDObject");
                ri.setLocalAttributes(new String[]{"TerritoryID"});
                ri.setLocalIsPK(false);
                ri.setRelatedClass(com.orderdb.Territories.class);
                ri.setRelatedAttributes(new String[]{"TerritoryID"});
                ri.setRelatedIdentifier("FK:Territories[TerritoryID]:EmployeeTerritories[TerritoryID]");
                ri.setLoadMethod("loadTerritoryIDObject");
                s_classInfo.addRelationInfo(ri);
            }
        }
        return s_classInfo;
    }

    public EmployeeTerritoriesBase(BusObjectConfig config)
    {
        super(config);
    }

    public int getEmployeeID()
    {
        return getIntProperty(ATTR_EmployeeID);
    }

    public void setEmployeeID(int value)
    {
        String[] relations = new String[]{REL_EmployeeIDObject};
        this.updateSingleRelations(relations, false);
        setProperty(ATTR_EmployeeID, value, 0);
        this.updateSingleRelations(relations, true);
    }

    public String getTerritoryID()
    {
        return getStringProperty(ATTR_TerritoryID);
    }

    public void setTerritoryID(String value)
    {
        String[] relations = new String[]{REL_TerritoryIDObject};
        this.updateSingleRelations(relations, false);
        setProperty(ATTR_TerritoryID, value, 0);
        this.updateSingleRelations(relations, true);
    }

    public Employees getEmployeeIDObject()
    {
        return (Employees)getSingleRelationObject(REL_EmployeeIDObject);
    }
    public Employees loadEmployeeIDObject()
    {
        String queryText = "select * from \"Employees\" where \"EmployeeID\" = :EmployeeID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("EmployeeID", "Employees.EmployeeID", QueryObject.PARAM_INT, new Integer(getEmployeeID()));
        query.setResultClass(Employees.class);
        return (Employees)query.getObject();
    }


    public void setEmployeeIDObject(Employees a_Employees)
    {
        if (a_Employees == null)
        {
            this.setNull("EmployeeID");
        }
        else
        {
            this.setEmployeeID(a_Employees.getEmployeeID());
        }
    }

    public Territories getTerritoryIDObject()
    {
        return (Territories)getSingleRelationObject(REL_TerritoryIDObject);
    }
    public Territories loadTerritoryIDObject()
    {
        String queryText = "select * from \"Territories\" where \"TerritoryID\" = :TerritoryID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("TerritoryID", "Territories.TerritoryID", QueryObject.PARAM_STRING, getTerritoryID());
        query.setResultClass(Territories.class);
        return (Territories)query.getObject();
    }


    public void setTerritoryIDObject(Territories a_Territories)
    {
        if (a_Territories == null)
        {
            this.setNull("TerritoryID");
        }
        else
        {
            this.setTerritoryID(a_Territories.getTerritoryID());
        }
    }

    public void setNull(String element)
    {
        super.setNull(element);
        if (ATTR_EmployeeID.equals(element))
        {
            this.updateSingleRelation(REL_EmployeeIDObject, false);
        }
        else if (ATTR_TerritoryID.equals(element))
        {
            this.updateSingleRelation(REL_TerritoryIDObject, false);
        }
    }
    public static com.orderdb.EmployeeTerritories getEmployeeTerritoriesObject(int EmployeeID, String TerritoryID)
    {
        String queryText = "select * from \"EmployeeTerritories\" where \"EmployeeID\" = :EmployeeID and \"TerritoryID\" = :TerritoryID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("EmployeeID", "EmployeeTerritories.EmployeeID", QueryObject.PARAM_INT, new Integer(EmployeeID));
        query.addParameter("TerritoryID", "EmployeeTerritories.TerritoryID", QueryObject.PARAM_STRING, TerritoryID);
        query.setResultClass(EmployeeTerritories.class);
        return (EmployeeTerritories)query.getObject();
    }

    public static BusObjectIterator<com.orderdb.EmployeeTerritories> getEmployeeTerritoriesObjects(int fromEmployeeID, int toEmployeeID, String fromTerritoryID, String toTerritoryID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"EmployeeTerritories\" where \"EmployeeID\" between :fromEmployeeID and :toEmployeeID and \"TerritoryID\" between :fromTerritoryID and :toTerritoryID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromEmployeeID", "EmployeeTerritories.EmployeeID", QueryObject.PARAM_INT, new Integer(fromEmployeeID));
        query.addParameter("toEmployeeID", "EmployeeTerritories.EmployeeID", QueryObject.PARAM_INT, new Integer(toEmployeeID));
        query.addParameter("fromTerritoryID", "EmployeeTerritories.TerritoryID", QueryObject.PARAM_STRING, fromTerritoryID);
        query.addParameter("toTerritoryID", "EmployeeTerritories.TerritoryID", QueryObject.PARAM_STRING, toTerritoryID);
        query.setResultClass(EmployeeTerritories.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.EmployeeTerritories> getEmployeeTerritoriesObjects(int fromEmployeeID, int toEmployeeID, String fromTerritoryID, String toTerritoryID)
    {
        String queryText = "select * from \"EmployeeTerritories\" where \"EmployeeID\" between :fromEmployeeID and :toEmployeeID and \"TerritoryID\" between :fromTerritoryID and :toTerritoryID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromEmployeeID", "EmployeeTerritories.EmployeeID", QueryObject.PARAM_INT, new Integer(fromEmployeeID));
        query.addParameter("toEmployeeID", "EmployeeTerritories.EmployeeID", QueryObject.PARAM_INT, new Integer(toEmployeeID));
        query.addParameter("fromTerritoryID", "EmployeeTerritories.TerritoryID", QueryObject.PARAM_STRING, fromTerritoryID);
        query.addParameter("toTerritoryID", "EmployeeTerritories.TerritoryID", QueryObject.PARAM_STRING, toTerritoryID);
        query.setResultClass(EmployeeTerritories.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.EmployeeTerritories> getEmployeeTerritoriesObjectsForEmployeeID(int EmployeeID)
    {
        String queryText = "select * from \"EmployeeTerritories\" where \"EmployeeID\" = :EmployeeID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("EmployeeID", "EmployeeTerritories.EmployeeID", QueryObject.PARAM_INT, new Integer(EmployeeID));
        query.setResultClass(EmployeeTerritories.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.EmployeeTerritories> getEmployeeTerritoriesObjectsForTerritoryID(String TerritoryID)
    {
        String queryText = "select * from \"EmployeeTerritories\" where \"TerritoryID\" = :TerritoryID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("TerritoryID", "EmployeeTerritories.TerritoryID", QueryObject.PARAM_STRING, TerritoryID);
        query.setResultClass(EmployeeTerritories.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.EmployeeTerritories> getNextEmployeeTerritoriesObjects(int EmployeeID, String TerritoryID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"EmployeeTerritories\" where (\"EmployeeID\" > :EmployeeID) or (\"EmployeeID\" = :EmployeeID and \"TerritoryID\" > :TerritoryID) order by \"EmployeeID\" asc, \"TerritoryID\" asc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("EmployeeID", "EmployeeTerritories.EmployeeID", QueryObject.PARAM_INT, new Integer(EmployeeID));
        query.addParameter("TerritoryID", "EmployeeTerritories.TerritoryID", QueryObject.PARAM_STRING, TerritoryID);
        query.setResultClass(EmployeeTerritories.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.EmployeeTerritories> getPreviousEmployeeTerritoriesObjects(int EmployeeID, String TerritoryID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"EmployeeTerritories\" where (\"EmployeeID\" < :EmployeeID) or (\"EmployeeID\" = :EmployeeID and \"TerritoryID\" < :TerritoryID) order by \"EmployeeID\" desc, \"TerritoryID\" desc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("EmployeeID", "EmployeeTerritories.EmployeeID", QueryObject.PARAM_INT, new Integer(EmployeeID));
        query.addParameter("TerritoryID", "EmployeeTerritories.TerritoryID", QueryObject.PARAM_STRING, TerritoryID);
        query.setResultClass(EmployeeTerritories.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

}
