/*
  This class has been generated by the Code Generator
*/

package com.orderdb;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.classinfo.AttributeInfo;
import com.cordys.cpc.bsf.classinfo.ClassInfo;
import com.cordys.cpc.bsf.classinfo.RelationInfo_FK;
import com.cordys.cpc.bsf.listeners.constraint.NumberValidator;
import com.cordys.cpc.bsf.listeners.constraint.StringValidator;


public abstract class EmployeesBase extends com.cordys.cpc.bsf.busobject.StateBusObject
{
    // tags used in the XML document
    public final static String ATTR_EmployeeID = "EmployeeID";
    public final static String ATTR_LastName = "LastName";
    public final static String ATTR_FirstName = "FirstName";
    public final static String ATTR_Title = "Title";
    public final static String ATTR_TitleOfCourtesy = "TitleOfCourtesy";
    public final static String ATTR_BirthDate = "BirthDate";
    public final static String ATTR_HireDate = "HireDate";
    public final static String ATTR_Address = "Address";
    public final static String ATTR_City = "City";
    public final static String ATTR_Region = "Region";
    public final static String ATTR_PostalCode = "PostalCode";
    public final static String ATTR_Country = "Country";
    public final static String ATTR_HomePhone = "HomePhone";
    public final static String ATTR_Extension = "Extension";
    public final static String ATTR_Photo = "Photo";
    public final static String ATTR_Notes = "Notes";
    public final static String ATTR_ReportsTo = "ReportsTo";
    public final static String ATTR_PhotoPath = "PhotoPath";
    private final static String REL_EmployeeTerritoriesObjects = "FK:Employees[EmployeeID]:EmployeeTerritories[EmployeeID]";
    private final static String REL_EmployeesObjects1 = "FK:Employees[EmployeeID]:Employees[ReportsTo]";
    private final static String REL_OrdersObjects = "FK:Employees[EmployeeID]:Orders[EmployeeID]";
    private final static String REL_ReportsToObject = "FK:Employees[ReportsTo]:Employees[EmployeeID]";
    private static ClassInfo s_classInfo = null;
    public static ClassInfo _getClassInfo()//NOPMD framework ensures this is thread safe
    {
        if ( s_classInfo == null )//NOPMD
        {
            s_classInfo = newClassInfo(Employees.class);
            s_classInfo.setTableName("Employees");
            s_classInfo.setUIDElements(new String[]{ATTR_EmployeeID});
            {
                AttributeInfo ai = new AttributeInfo(ATTR_EmployeeID);
                ai.setJavaName("EmployeeID");
                ai.setColumnName("EmployeeID");
                ai.setAttributeClass(int.class);
                NumberValidator v = new NumberValidator(ATTR_EmployeeID);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_LastName);
                ai.setJavaName("LastName");
                ai.setColumnName("LastName");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_LastName);
                v.setMaxLength(20);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_FirstName);
                ai.setJavaName("FirstName");
                ai.setColumnName("FirstName");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_FirstName);
                v.setMaxLength(10);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_Title);
                ai.setJavaName("Title");
                ai.setColumnName("Title");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_Title);
                v.setMaxLength(30);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_TitleOfCourtesy);
                ai.setJavaName("TitleOfCourtesy");
                ai.setColumnName("TitleOfCourtesy");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_TitleOfCourtesy);
                v.setMaxLength(25);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_BirthDate);
                ai.setJavaName("BirthDate");
                ai.setColumnName("BirthDate");
                ai.setAttributeClass(java.util.Date.class);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_HireDate);
                ai.setJavaName("HireDate");
                ai.setColumnName("HireDate");
                ai.setAttributeClass(java.util.Date.class);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_Address);
                ai.setJavaName("Address");
                ai.setColumnName("Address");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_Address);
                v.setMaxLength(60);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_City);
                ai.setJavaName("City");
                ai.setColumnName("City");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_City);
                v.setMaxLength(15);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_Region);
                ai.setJavaName("Region");
                ai.setColumnName("Region");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_Region);
                v.setMaxLength(15);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_PostalCode);
                ai.setJavaName("PostalCode");
                ai.setColumnName("PostalCode");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_PostalCode);
                v.setMaxLength(10);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_Country);
                ai.setJavaName("Country");
                ai.setColumnName("Country");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_Country);
                v.setMaxLength(15);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_HomePhone);
                ai.setJavaName("HomePhone");
                ai.setColumnName("HomePhone");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_HomePhone);
                v.setMaxLength(24);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_Extension);
                ai.setJavaName("Extension");
                ai.setColumnName("Extension");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_Extension);
                v.setMaxLength(4);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_Photo);
                ai.setJavaName("Photo");
                ai.setColumnName("Photo");
                ai.setAttributeClass(String.class);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_Notes);
                ai.setJavaName("Notes");
                ai.setColumnName("Notes");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_Notes);
                v.setMaxLength(2147483647);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_ReportsTo);
                ai.setJavaName("ReportsTo");
                ai.setColumnName("ReportsTo");
                ai.setAttributeClass(int.class);
                NumberValidator v = new NumberValidator(ATTR_ReportsTo);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_PhotoPath);
                ai.setJavaName("PhotoPath");
                ai.setColumnName("PhotoPath");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_PhotoPath);
                v.setMaxLength(255);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                // relation EmployeeTerritoriesObjects (FK:Employees[EmployeeID]:EmployeeTerritories[EmployeeID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_EmployeeTerritoriesObjects);
                ri.setName("EmployeeTerritoriesObjects");
                ri.setLocalAttributes(new String[]{"EmployeeID"});
                ri.setLocalIsPK(true);
                ri.setRelatedClass(com.orderdb.EmployeeTerritories.class);
                ri.setRelatedAttributes(new String[]{"EmployeeID"});
                ri.setRelatedIdentifier("FK:EmployeeTerritories[EmployeeID]:Employees[EmployeeID]");
                ri.setLoadMethod("loadEmployeeTerritoriesObjects");
                s_classInfo.addRelationInfo(ri);
            }
            {
                // relation EmployeesObjects1 (FK:Employees[EmployeeID]:Employees[ReportsTo])
                RelationInfo_FK ri = new RelationInfo_FK(REL_EmployeesObjects1);
                ri.setName("EmployeesObjects1");
                ri.setLocalAttributes(new String[]{"EmployeeID"});
                ri.setLocalIsPK(true);
                ri.setRelatedClass(com.orderdb.Employees.class);
                ri.setRelatedAttributes(new String[]{"ReportsTo"});
                ri.setRelatedIdentifier("FK:Employees[ReportsTo]:Employees[EmployeeID]");
                ri.setLoadMethod("loadEmployeesObjects1");
                s_classInfo.addRelationInfo(ri);
            }
            {
                // relation OrdersObjects (FK:Employees[EmployeeID]:Orders[EmployeeID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_OrdersObjects);
                ri.setName("OrdersObjects");
                ri.setLocalAttributes(new String[]{"EmployeeID"});
                ri.setLocalIsPK(true);
                ri.setRelatedClass(com.orderdb.Orders.class);
                ri.setRelatedAttributes(new String[]{"EmployeeID"});
                ri.setRelatedIdentifier("FK:Orders[EmployeeID]:Employees[EmployeeID]");
                ri.setLoadMethod("loadOrdersObjects");
                s_classInfo.addRelationInfo(ri);
            }
            {
                // relation ReportsToObject (FK:Employees[ReportsTo]:Employees[EmployeeID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_ReportsToObject);
                ri.setName("ReportsToObject");
                ri.setLocalAttributes(new String[]{"ReportsTo"});
                ri.setLocalIsPK(false);
                ri.setRelatedClass(com.orderdb.Employees.class);
                ri.setRelatedAttributes(new String[]{"EmployeeID"});
                ri.setRelatedIdentifier("FK:Employees[EmployeeID]:Employees[ReportsTo]");
                ri.setLoadMethod("loadReportsToObject");
                s_classInfo.addRelationInfo(ri);
            }
        }
        return s_classInfo;
    }

    public EmployeesBase(BusObjectConfig config)
    {
        super(config);
    }

    public int getEmployeeID()
    {
        return getIntProperty(ATTR_EmployeeID);
    }

    public void setEmployeeID(int value)
    {
        setProperty(ATTR_EmployeeID, value, 0);
    }

    public String getLastName()
    {
        return getStringProperty(ATTR_LastName);
    }

    public void setLastName(String value)
    {
        setProperty(ATTR_LastName, value, 0);
    }

    public String getFirstName()
    {
        return getStringProperty(ATTR_FirstName);
    }

    public void setFirstName(String value)
    {
        setProperty(ATTR_FirstName, value, 0);
    }

    public String getTitle()
    {
        return getStringProperty(ATTR_Title);
    }

    public void setTitle(String value)
    {
        setProperty(ATTR_Title, value, 0);
    }

    public String getTitleOfCourtesy()
    {
        return getStringProperty(ATTR_TitleOfCourtesy);
    }

    public void setTitleOfCourtesy(String value)
    {
        setProperty(ATTR_TitleOfCourtesy, value, 0);
    }

    public java.util.Date getBirthDate()
    {
        return getDateTimestampProperty(ATTR_BirthDate);
    }

    public void setBirthDate(java.util.Date value)
    {
        setProperty(ATTR_BirthDate, value, 0);
    }

    public java.util.Date getHireDate()
    {
        return getDateTimestampProperty(ATTR_HireDate);
    }

    public void setHireDate(java.util.Date value)
    {
        setProperty(ATTR_HireDate, value, 0);
    }

    public String getAddress()
    {
        return getStringProperty(ATTR_Address);
    }

    public void setAddress(String value)
    {
        setProperty(ATTR_Address, value, 0);
    }

    public String getCity()
    {
        return getStringProperty(ATTR_City);
    }

    public void setCity(String value)
    {
        setProperty(ATTR_City, value, 0);
    }

    public String getRegion()
    {
        return getStringProperty(ATTR_Region);
    }

    public void setRegion(String value)
    {
        setProperty(ATTR_Region, value, 0);
    }

    public String getPostalCode()
    {
        return getStringProperty(ATTR_PostalCode);
    }

    public void setPostalCode(String value)
    {
        setProperty(ATTR_PostalCode, value, 0);
    }

    public String getCountry()
    {
        return getStringProperty(ATTR_Country);
    }

    public void setCountry(String value)
    {
        setProperty(ATTR_Country, value, 0);
    }

    public String getHomePhone()
    {
        return getStringProperty(ATTR_HomePhone);
    }

    public void setHomePhone(String value)
    {
        setProperty(ATTR_HomePhone, value, 0);
    }

    public String getExtension()
    {
        return getStringProperty(ATTR_Extension);
    }

    public void setExtension(String value)
    {
        setProperty(ATTR_Extension, value, 0);
    }

    public String getPhoto()
    {
        return getStringProperty(ATTR_Photo);
    }

    public void setPhoto(String value)
    {
        setProperty(ATTR_Photo, value, 0);
    }

    public String getNotes()
    {
        return getStringProperty(ATTR_Notes);
    }

    public void setNotes(String value)
    {
        setProperty(ATTR_Notes, value, 0);
    }

    public int getReportsTo()
    {
        return getIntProperty(ATTR_ReportsTo);
    }

    public void setReportsTo(int value)
    {
        String[] relations = new String[]{REL_ReportsToObject};
        this.updateSingleRelations(relations, false);
        setProperty(ATTR_ReportsTo, value, 0);
        this.updateSingleRelations(relations, true);
    }

    public String getPhotoPath()
    {
        return getStringProperty(ATTR_PhotoPath);
    }

    public void setPhotoPath(String value)
    {
        setProperty(ATTR_PhotoPath, value, 0);
    }

    public BusObjectIterator<EmployeeTerritories> getEmployeeTerritoriesObjects()
    {
        return getMultiRelationObjects(REL_EmployeeTerritoriesObjects);
    }
    public BusObjectIterator<EmployeeTerritories> loadEmployeeTerritoriesObjects()
    {
        String queryText = "select * from \"EmployeeTerritories\" where \"EmployeeID\" = :EmployeeID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("EmployeeID", "EmployeeTerritories.EmployeeID", QueryObject.PARAM_INT, new Integer(getEmployeeID()));
        query.setResultClass(EmployeeTerritories.class);
        return query.getObjects();
    }


    public void addEmployeeTerritoriesObject(EmployeeTerritories a_EmployeeTerritories)
    {
        a_EmployeeTerritories.setEmployeeID(this.getEmployeeID());
    }

    public void removeEmployeeTerritoriesObject(EmployeeTerritories a_EmployeeTerritories)
    {
        a_EmployeeTerritories.setNull("EmployeeID");
    }

    public BusObjectIterator<Employees> getEmployeesObjects1Objects()
    {
        return getMultiRelationObjects(REL_EmployeesObjects1);
    }
    public BusObjectIterator<Employees> loadEmployeesObjects1()
    {
        String queryText = "select * from \"Employees\" where \"ReportsTo\" = :EmployeeID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("EmployeeID", "Employees.ReportsTo", QueryObject.PARAM_INT, new Integer(getEmployeeID()));
        query.setResultClass(Employees.class);
        return query.getObjects();
    }


    public void addEmployeesObjects1Object(Employees a_Employees)
    {
        a_Employees.setReportsTo(this.getEmployeeID());
    }

    public void removeEmployeesObjects1Object(Employees a_Employees)
    {
        a_Employees.setNull("ReportsTo");
    }

    public BusObjectIterator<Orders> getOrdersObjects()
    {
        return getMultiRelationObjects(REL_OrdersObjects);
    }
    public BusObjectIterator<Orders> loadOrdersObjects()
    {
        String queryText = "select * from \"Orders\" where \"EmployeeID\" = :EmployeeID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("EmployeeID", "Orders.EmployeeID", QueryObject.PARAM_INT, new Integer(getEmployeeID()));
        query.setResultClass(Orders.class);
        return query.getObjects();
    }


    public void addOrdersObject(Orders a_Orders)
    {
        a_Orders.setEmployeeID(this.getEmployeeID());
    }

    public void removeOrdersObject(Orders a_Orders)
    {
        a_Orders.setNull("EmployeeID");
    }

    public Employees getReportsToObject()
    {
        return (Employees)getSingleRelationObject(REL_ReportsToObject);
    }
    public Employees loadReportsToObject()
    {
        String queryText = "select * from \"Employees\" where \"EmployeeID\" = :ReportsTo";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("ReportsTo", "Employees.EmployeeID", QueryObject.PARAM_INT, new Integer(getReportsTo()));
        query.setResultClass(Employees.class);
        return (Employees)query.getObject();
    }


    public void setReportsToObject(Employees a_Employees)
    {
        if (a_Employees == null)
        {
            this.setNull("ReportsTo");
        }
        else
        {
            this.setReportsTo(a_Employees.getEmployeeID());
        }
    }

    public void setNull(String element)
    {
        super.setNull(element);
        if (ATTR_ReportsTo.equals(element))
        {
            this.updateSingleRelation(REL_ReportsToObject, false);
        }
    }
    public static com.orderdb.Employees getEmployeesObject(int EmployeeID)
    {
        String queryText = "select * from \"Employees\" where \"EmployeeID\" = :EmployeeID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("EmployeeID", "Employees.EmployeeID", QueryObject.PARAM_INT, new Integer(EmployeeID));
        query.setResultClass(Employees.class);
        return (Employees)query.getObject();
    }

    public static BusObjectIterator<com.orderdb.Employees> getEmployeesObjects(int fromEmployeeID, int toEmployeeID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"Employees\" where \"EmployeeID\" between :fromEmployeeID and :toEmployeeID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromEmployeeID", "Employees.EmployeeID", QueryObject.PARAM_INT, new Integer(fromEmployeeID));
        query.addParameter("toEmployeeID", "Employees.EmployeeID", QueryObject.PARAM_INT, new Integer(toEmployeeID));
        query.setResultClass(Employees.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.Employees> getEmployeesObjects(int fromEmployeeID, int toEmployeeID)
    {
        String queryText = "select * from \"Employees\" where \"EmployeeID\" between :fromEmployeeID and :toEmployeeID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromEmployeeID", "Employees.EmployeeID", QueryObject.PARAM_INT, new Integer(fromEmployeeID));
        query.addParameter("toEmployeeID", "Employees.EmployeeID", QueryObject.PARAM_INT, new Integer(toEmployeeID));
        query.setResultClass(Employees.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.Employees> getEmployeesObjectsForReportsTo(int ReportsTo)
    {
        String queryText = "select * from \"Employees\" where \"ReportsTo\" = :ReportsTo";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("ReportsTo", "Employees.ReportsTo", QueryObject.PARAM_INT, new Integer(ReportsTo));
        query.setResultClass(Employees.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.Employees> getNextEmployeesObjects(int EmployeeID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"Employees\" where (\"EmployeeID\" > :EmployeeID) order by \"EmployeeID\" asc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("EmployeeID", "Employees.EmployeeID", QueryObject.PARAM_INT, new Integer(EmployeeID));
        query.setResultClass(Employees.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.Employees> getPreviousEmployeesObjects(int EmployeeID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"Employees\" where (\"EmployeeID\" < :EmployeeID) order by \"EmployeeID\" desc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("EmployeeID", "Employees.EmployeeID", QueryObject.PARAM_INT, new Integer(EmployeeID));
        query.setResultClass(Employees.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

}
