/*
  This class has been generated by the Code Generator
*/

package com.orderdb;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.classinfo.AttributeInfo;
import com.cordys.cpc.bsf.classinfo.ClassInfo;
import com.cordys.cpc.bsf.classinfo.RelationInfo_FK;
import com.cordys.cpc.bsf.listeners.constraint.StringValidator;


public abstract class CustomerCustomerDemoBase extends com.cordys.cpc.bsf.busobject.StateBusObject
{
    // tags used in the XML document
    public final static String ATTR_CustomerID = "CustomerID";
    public final static String ATTR_CustomerTypeID = "CustomerTypeID";
    private final static String REL_CustomerTypeIDObject = "FK:CustomerCustomerDemo[CustomerTypeID]:CustomerDemographics[CustomerTypeID]";
    private final static String REL_CustomerIDObject = "FK:CustomerCustomerDemo[CustomerID]:Customers[CustomerID]";
    private static ClassInfo s_classInfo = null;
    public static ClassInfo _getClassInfo()//NOPMD framework ensures this is thread safe
    {
        if ( s_classInfo == null )//NOPMD
        {
            s_classInfo = newClassInfo(CustomerCustomerDemo.class);
            s_classInfo.setTableName("CustomerCustomerDemo");
            s_classInfo.setUIDElements(new String[]{ATTR_CustomerID, ATTR_CustomerTypeID});
            {
                AttributeInfo ai = new AttributeInfo(ATTR_CustomerID);
                ai.setJavaName("CustomerID");
                ai.setColumnName("CustomerID");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_CustomerID);
                v.setMaxLength(5);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_CustomerTypeID);
                ai.setJavaName("CustomerTypeID");
                ai.setColumnName("CustomerTypeID");
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_CustomerTypeID);
                v.setMaxLength(10);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                // relation CustomerTypeIDObject (FK:CustomerCustomerDemo[CustomerTypeID]:CustomerDemographics[CustomerTypeID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_CustomerTypeIDObject);
                ri.setName("CustomerTypeIDObject");
                ri.setLocalAttributes(new String[]{"CustomerTypeID"});
                ri.setLocalIsPK(false);
                ri.setRelatedClass(com.orderdb.CustomerDemographics.class);
                ri.setRelatedAttributes(new String[]{"CustomerTypeID"});
                ri.setRelatedIdentifier("FK:CustomerDemographics[CustomerTypeID]:CustomerCustomerDemo[CustomerTypeID]");
                ri.setLoadMethod("loadCustomerTypeIDObject");
                s_classInfo.addRelationInfo(ri);
            }
            {
                // relation CustomerIDObject (FK:CustomerCustomerDemo[CustomerID]:Customers[CustomerID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_CustomerIDObject);
                ri.setName("CustomerIDObject");
                ri.setLocalAttributes(new String[]{"CustomerID"});
                ri.setLocalIsPK(false);
                ri.setRelatedClass(com.orderdb.Customers.class);
                ri.setRelatedAttributes(new String[]{"CustomerID"});
                ri.setRelatedIdentifier("FK:Customers[CustomerID]:CustomerCustomerDemo[CustomerID]");
                ri.setLoadMethod("loadCustomerIDObject");
                s_classInfo.addRelationInfo(ri);
            }
        }
        return s_classInfo;
    }

    public CustomerCustomerDemoBase(BusObjectConfig config)
    {
        super(config);
    }

    public String getCustomerID()
    {
        return getStringProperty(ATTR_CustomerID);
    }

    public void setCustomerID(String value)
    {
        String[] relations = new String[]{REL_CustomerIDObject};
        this.updateSingleRelations(relations, false);
        setProperty(ATTR_CustomerID, value, 0);
        this.updateSingleRelations(relations, true);
    }

    public String getCustomerTypeID()
    {
        return getStringProperty(ATTR_CustomerTypeID);
    }

    public void setCustomerTypeID(String value)
    {
        String[] relations = new String[]{REL_CustomerTypeIDObject};
        this.updateSingleRelations(relations, false);
        setProperty(ATTR_CustomerTypeID, value, 0);
        this.updateSingleRelations(relations, true);
    }

    public CustomerDemographics getCustomerTypeIDObject()
    {
        return (CustomerDemographics)getSingleRelationObject(REL_CustomerTypeIDObject);
    }
    public CustomerDemographics loadCustomerTypeIDObject()
    {
        String queryText = "select * from \"CustomerDemographics\" where \"CustomerTypeID\" = :CustomerTypeID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CustomerTypeID", "CustomerDemographics.CustomerTypeID", QueryObject.PARAM_STRING, getCustomerTypeID());
        query.setResultClass(CustomerDemographics.class);
        return (CustomerDemographics)query.getObject();
    }


    public void setCustomerTypeIDObject(CustomerDemographics a_CustomerDemographics)
    {
        if (a_CustomerDemographics == null)
        {
            this.setNull("CustomerTypeID");
        }
        else
        {
            this.setCustomerTypeID(a_CustomerDemographics.getCustomerTypeID());
        }
    }

    public Customers getCustomerIDObject()
    {
        return (Customers)getSingleRelationObject(REL_CustomerIDObject);
    }
    public Customers loadCustomerIDObject()
    {
        String queryText = "select * from \"Customers\" where \"CustomerID\" = :CustomerID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CustomerID", "Customers.CustomerID", QueryObject.PARAM_STRING, getCustomerID());
        query.setResultClass(Customers.class);
        return (Customers)query.getObject();
    }


    public void setCustomerIDObject(Customers a_Customers)
    {
        if (a_Customers == null)
        {
            this.setNull("CustomerID");
        }
        else
        {
            this.setCustomerID(a_Customers.getCustomerID());
        }
    }

    public void setNull(String element)
    {
        super.setNull(element);
        if (ATTR_CustomerID.equals(element))
        {
            this.updateSingleRelation(REL_CustomerIDObject, false);
        }
        else if (ATTR_CustomerTypeID.equals(element))
        {
            this.updateSingleRelation(REL_CustomerTypeIDObject, false);
        }
    }
    public static com.orderdb.CustomerCustomerDemo getCustomerCustomerDemoObject(String CustomerID, String CustomerTypeID)
    {
        String queryText = "select * from \"CustomerCustomerDemo\" where \"CustomerID\" = :CustomerID and \"CustomerTypeID\" = :CustomerTypeID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CustomerID", "CustomerCustomerDemo.CustomerID", QueryObject.PARAM_STRING, CustomerID);
        query.addParameter("CustomerTypeID", "CustomerCustomerDemo.CustomerTypeID", QueryObject.PARAM_STRING, CustomerTypeID);
        query.setResultClass(CustomerCustomerDemo.class);
        return (CustomerCustomerDemo)query.getObject();
    }

    public static BusObjectIterator<com.orderdb.CustomerCustomerDemo> getCustomerCustomerDemoObjects(String fromCustomerID, String toCustomerID, String fromCustomerTypeID, String toCustomerTypeID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"CustomerCustomerDemo\" where \"CustomerID\" between :fromCustomerID and :toCustomerID and \"CustomerTypeID\" between :fromCustomerTypeID and :toCustomerTypeID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromCustomerID", "CustomerCustomerDemo.CustomerID", QueryObject.PARAM_STRING, fromCustomerID);
        query.addParameter("toCustomerID", "CustomerCustomerDemo.CustomerID", QueryObject.PARAM_STRING, toCustomerID);
        query.addParameter("fromCustomerTypeID", "CustomerCustomerDemo.CustomerTypeID", QueryObject.PARAM_STRING, fromCustomerTypeID);
        query.addParameter("toCustomerTypeID", "CustomerCustomerDemo.CustomerTypeID", QueryObject.PARAM_STRING, toCustomerTypeID);
        query.setResultClass(CustomerCustomerDemo.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.CustomerCustomerDemo> getCustomerCustomerDemoObjects(String fromCustomerID, String toCustomerID, String fromCustomerTypeID, String toCustomerTypeID)
    {
        String queryText = "select * from \"CustomerCustomerDemo\" where \"CustomerID\" between :fromCustomerID and :toCustomerID and \"CustomerTypeID\" between :fromCustomerTypeID and :toCustomerTypeID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromCustomerID", "CustomerCustomerDemo.CustomerID", QueryObject.PARAM_STRING, fromCustomerID);
        query.addParameter("toCustomerID", "CustomerCustomerDemo.CustomerID", QueryObject.PARAM_STRING, toCustomerID);
        query.addParameter("fromCustomerTypeID", "CustomerCustomerDemo.CustomerTypeID", QueryObject.PARAM_STRING, fromCustomerTypeID);
        query.addParameter("toCustomerTypeID", "CustomerCustomerDemo.CustomerTypeID", QueryObject.PARAM_STRING, toCustomerTypeID);
        query.setResultClass(CustomerCustomerDemo.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.CustomerCustomerDemo> getCustomerCustomerDemoObjectsForCustomerID(String CustomerID)
    {
        String queryText = "select * from \"CustomerCustomerDemo\" where \"CustomerID\" = :CustomerID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CustomerID", "CustomerCustomerDemo.CustomerID", QueryObject.PARAM_STRING, CustomerID);
        query.setResultClass(CustomerCustomerDemo.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.CustomerCustomerDemo> getCustomerCustomerDemoObjectsForCustomerTypeID(String CustomerTypeID)
    {
        String queryText = "select * from \"CustomerCustomerDemo\" where \"CustomerTypeID\" = :CustomerTypeID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CustomerTypeID", "CustomerCustomerDemo.CustomerTypeID", QueryObject.PARAM_STRING, CustomerTypeID);
        query.setResultClass(CustomerCustomerDemo.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.CustomerCustomerDemo> getNextCustomerCustomerDemoObjects(String CustomerID, String CustomerTypeID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"CustomerCustomerDemo\" where (\"CustomerID\" > :CustomerID) or (\"CustomerID\" = :CustomerID and \"CustomerTypeID\" > :CustomerTypeID) order by \"CustomerID\" asc, \"CustomerTypeID\" asc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CustomerID", "CustomerCustomerDemo.CustomerID", QueryObject.PARAM_STRING, CustomerID);
        query.addParameter("CustomerTypeID", "CustomerCustomerDemo.CustomerTypeID", QueryObject.PARAM_STRING, CustomerTypeID);
        query.setResultClass(CustomerCustomerDemo.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    public static BusObjectIterator<com.orderdb.CustomerCustomerDemo> getPreviousCustomerCustomerDemoObjects(String CustomerID, String CustomerTypeID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"CustomerCustomerDemo\" where (\"CustomerID\" < :CustomerID) or (\"CustomerID\" = :CustomerID and \"CustomerTypeID\" < :CustomerTypeID) order by \"CustomerID\" desc, \"CustomerTypeID\" desc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CustomerID", "CustomerCustomerDemo.CustomerID", QueryObject.PARAM_STRING, CustomerID);
        query.addParameter("CustomerTypeID", "CustomerCustomerDemo.CustomerTypeID", QueryObject.PARAM_STRING, CustomerTypeID);
        query.setResultClass(CustomerCustomerDemo.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

}
